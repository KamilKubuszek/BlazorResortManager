@inject NavigationManager NavigationManager

<RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Start" Style="height: fit-content;">
    @foreach(var page in pages)
    {
        <RadzenButton ButtonStyle="ButtonStyle.Light" Shade="Shade.Lighter" Style="width: 100%;"
                      Variant="@(pageUrl == page.url ? Variant.Outlined : Variant.Flat )" 
                      Click=@(() => changePage("/"+page.url))
                      Text=@(page.title) 
                      Disabled="@(pageUrl == page.url ? true : false)"/>
    }
</RadzenStack>

@code {
    private string pageUrl = string.Empty;
    private List<pageInfo> pages = new List<pageInfo>()
    {
        new pageInfo{ url = "resort/track/add", title="Add new track"},
        new pageInfo{ url = "resort/lift/add", title="Add new lift"},
        new pageInfo{ url = "resort/status", title="Statuses"},
        new pageInfo{ url = "resort/status/update", title="Update resort status"},
        new pageInfo{ url = "/resort/edit", title="Edit resort info"}      
    };

    protected override void OnInitialized() => pageUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);

    private async void changePage(string url)
    {
        await Task.Delay(200);
        NavigationManager.NavigateTo(url);
    }  

    private class pageInfo
    {
        public string url { get; set; }
        public string title { get; set; }
    }
}
