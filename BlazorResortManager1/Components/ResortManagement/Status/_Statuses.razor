@page "/s"
@rendermode InteractiveServer
<h3>_Statuses</h3>

@inject IDbContextFactory<ApplicationDbContext> contextFactory
<RadzenDataGrid Data="statuses" TItem="StatusSheet"
                SelectionMode="DataGridSelectionMode.Single" @bind-Value=@selectedSheets>
    <Columns>
        <RadzenDataGridColumn Property="productionVersion" Title="active" TextAlign="TextAlign.Center">
            <Template Context="sheet">
                <RadzenIcon Icon="@(sheet.productionVersion ? "Check_Circle" : "Cancel")" IconColor="@(sheet.productionVersion ? Colors.Success : Colors.Danger)" />
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn Property="datetime" Title="Date and time" TextAlign="TextAlign.Center">
            <Template Context="sheet">
                @(sheet.dateTime.Date + sheet.dateTime.TimeOfDay)
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>
@if(selectedSheets?.Any() == true)
{
@*     var s = statuses.FirstOrDefault()
    <_StatusCard sheet="s"/> *@
}
@code {
    IQueryable<StatusSheet> statuses;
    IList<StatusSheet> selectedSheets;
    protected override async Task OnInitializedAsync()
    {
        var database = contextFactory.CreateDbContext();

        statuses = database.statusSheets;

    }
    private void fetchDataForSheet()
    {
        
    }

}
