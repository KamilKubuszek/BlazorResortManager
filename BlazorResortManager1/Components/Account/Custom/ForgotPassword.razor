@page "/Account/ForgotPassword"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using BlazorResortManager1.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Forgot your password?</PageTitle>

<RadzenRow Style="width: 100%; height: 100%">
    <RadzenColumn>
        <RadzenCard class="rz-background-color-primary" Style="width: 100%; height: 100%; align-items: center; color: white;">
            <h1 class="text-5xl font-bold">Forgot your password?</h1>
            <h2>Enter your email</h2>
        </RadzenCard>
    </RadzenColumn>

    <RadzenColumn>
        <EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <RadzenStack JustifyContent="JustifyContent.Center" Style="width: 100%">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" role="alert" />

                <RadzenStack JustifyContent="JustifyContent.Left" Orientation="Orientation.Horizontal" Style="width: 100%" Gap="1rem">
                    <label for="email" class="w-1/4">Email</label>
                    <div class="relative w-3/4">
                        <InputText @bind-Value="Input.Email" class="rz-textbox w-full rounded-md" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                        <ValidationMessage For="() => Input.Email" class="w-full text-red-500 absolute -bottom-4 right-0.5 text-xs" />
                    </div>
                </RadzenStack>

                <RadzenStack Style="width: 100%" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
                    <button type="submit" class="rz-background-color-primary rz-ripple min-h-8 w-1/2 rounded-md text-white hover:bg-rz-bg-dark">Reset password</button>
                </RadzenStack>
            </RadzenStack>
        </EditForm>
    </RadzenColumn>
</RadzenRow>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            // Don't reveal that the user does not exist or is not confirmed
            RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
        }

        // Generate the password reset token and send email
        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
