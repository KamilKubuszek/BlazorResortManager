@inject NavigationManager NavigationManager
@inject IStringLocalizer<AppLanguage> local

<RadzenMenu>
    <RadzenMenuItem Path="home" Text="@local["Home"]" />
    <RadzenMenuItem Path="resort" Text="@local["Resort"]" />
    <RadzenMenuItem Path="resort/widget" Text="@local["Widget"]" />
    <RadzenMenuItem Path="resort/tutorial" Text="@local["Tutorial"]" />
    <RadzenMenuItem Path="resort/status/update" Text="@local["Update status"]" />
    <RadzenMenuItem Click="@(() => NavigationManager.NavigateTo("account/login", true))" Text="@local["Logout"]" />

    <RadzenProfileMenu Style="float: right">
        <Template>
            <RadzenGravatar Email="user@example.com" />
        </Template>
        <ChildContent>
        </ChildContent>
    </RadzenProfileMenu>
    <RadzenAppearanceToggle />
</RadzenMenu>

@* <form Model="model" action="Account/Logout" method="post">
    <AntiforgeryToken />
    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
    <button type="submit" class="nav-link" id="logout_button">
        <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> @local["Logout"]
    </button>
</form> *@
@* <form action="redirectstatic?Target=account/login" method="get">
    <button type="submit" class="nav-link" id="logout_button">
        <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> @local["Logout"]
    </button>
</form> *@

@code {
    private object model = new { };
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void logOut(EditContext editContext)
    {
        editContext.Validate();
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
