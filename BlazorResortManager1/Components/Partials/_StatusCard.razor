@rendermode InteractiveServer
@inject IStringLocalizer<AppLanguage> local
@inject IJSRuntime JSRuntime
<div class="block h-full w-full" id="containerRef">
    @if (displayInfo)
    {
        <h3>@($"{sheet.dateTime} {local["Status"]}")</h3>
        <hr />
    }

    @* <div class="h-[350]"> *@
        <RadzenTabs Change="resizeOnChange">
            <Tabs>
                <RadzenTabsItem Text="@local["Tracks"]">
                    @* <h2 class="text-2xl font-bold">@local["Tracks"]</h2> *@
                    <RadzenDataGrid id="res1" Data="sheet.trackStatuses.OrderByDescending(e => e.parentTrack.name)" 
                        TItem="TrackStatus" AllowVirtualization="true" Style="height: 250px">
                        <Columns>
                            <RadzenDataGridColumn Title="@local["Name"]" TextAlign="TextAlign.Center">
                                <Template Context="status">
                                    @status.parentTrack.name
                                </Template>
                            </RadzenDataGridColumn>

                            <RadzenDataGridColumn Property="@nameof(TrackStatus.opened)" Title="@local["Active"]" TextAlign="TextAlign.Center">
                                <Template Context="status">
                                    <div class="notranslate">
                                        <RadzenIcon Icon="@(status.opened ? "Check_Circle" : "Cancel")" IconColor="@(status.opened ? Colors.Success : Colors.Danger)" />

                                    </div>
                                </Template>
                            </RadzenDataGridColumn>

                            <RadzenDataGridColumn Property="@nameof(TrackStatus.snowCover)" Title="@local["Snow cover"]" TextAlign="TextAlign.Center">

                            </RadzenDataGridColumn>

                            <RadzenDataGridColumn Property="@nameof(TrackStatus.openingTime)" Title="@local["Opening at"]" TextAlign="TextAlign.Center">

                            </RadzenDataGridColumn>

                            <RadzenDataGridColumn Property="@nameof(TrackStatus.openingTime)" Title="@local["Closing at"]" TextAlign="TextAlign.Center">

                            </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
                </RadzenTabsItem>
                <RadzenTabsItem Text="@local["Lifts"]">
                    @* <h2 class="text-2xl font-bold">@local["Lifts"]</h2> *@
                    <RadzenDataGrid id="res2" Data="sheet.liftStatuses.OrderByDescending(e => e.parentLift.name)" 
                        TItem="LiftStatus" Style="height:250px">
                        <Columns>
                            <RadzenDataGridColumn Title="@local["Name"]" TextAlign="TextAlign.Center">
                                <Template Context="status">
                                    @status.parentLift.name
                                </Template>
                            </RadzenDataGridColumn>

                            <RadzenDataGridColumn Property="@nameof(LiftStatus.opened)" Title="@local["Active"]" TextAlign="TextAlign.Center">
                                <Template Context="status">
                                    <div class="notranslate">
                                        <RadzenIcon Icon="@(status.opened ? "Check_Circle" : "Cancel")" IconColor="@(status.opened ? Colors.Success : Colors.Danger)" />
                                    </div>
                                </Template>
                            </RadzenDataGridColumn>

                            <RadzenDataGridColumn Property="@nameof(LiftStatus.openingTime)" Title="@local["Opening at"]" TextAlign="TextAlign.Center">

                            </RadzenDataGridColumn>

                            <RadzenDataGridColumn Property="@nameof(LiftStatus.openingTime)" Title="@local["Closing at"]" TextAlign="TextAlign.Center">

                            </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
                </RadzenTabsItem>
            </Tabs>
        </RadzenTabs>
    @* </div> *@
</div>

@code {
    [Parameter]
    public bool displayInfo { get; set; }

    [Parameter]
    public StatusSheet? sheet { get; set; }

    private int pageIndex = 0;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        // @using System.Text.Json

        // Console.WriteLine(JsonSerializer.Serialize(sheet, new JsonSerializerOptions { WriteIndented = true, ReferenceHandler = System.Text.Json.Serialization.ReferenceHandler.IgnoreCycles }));

    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // if (firstRender)
        // {
        //     await Task.Delay(100);
        //     int bottom = await JSRuntime.InvokeAsync<int>("getBottomOffsetReference", "containerRef");
        //     await JSRuntime.InvokeVoidAsync("sizeHeightToBottomOfParent", "res1", bottom);
        // }
    }
    private async Task resizeOnChange()
    {
        // int bottom = await JSRuntime.InvokeAsync<int>("getBottomOffsetReference", "containerRef");
        // switch (pageIndex)
        // {
        //     case 0:
        //         await JSRuntime.InvokeVoidAsync("sizeHeightToBottomOfParent", "res1", bottom);
        //         break;
        //     case 1:
        //         await JSRuntime.InvokeVoidAsync("sizeHeightToBottomOfParent", "res2", bottom);
        //         break;
        // }
        // await Task.Delay(1000);

        
    }
}
